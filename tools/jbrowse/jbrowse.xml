<tool id="jbrowse" name="JBrowse" version="0.3">
  <description>genome browser</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <version_command>python jbrowse.py --version</version_command>
  <command interpreter="python"><![CDATA[jbrowse.py
$trackxml
#for $genome in $genomes:
 $genome
#end for

--jbrowse \${JBROWSE_SOURCE_DIR}
--outdir $output.files_path
> $output]]></command>
  <configfiles>
      <configfile name="trackxml">
<![CDATA[
<?xml version="1.0"?>
<tracks>
    #for $track in $data_tracks:
    <track>
        <files>
          #for $dataset in $track.data_format.annotation:
            <file>${dataset}</file>
          #end for
        </files>
        <extensions>
          #for $dataset in $track.data_format.annotation:
            <extension>${dataset.ext}</extension>
          #end for
        </extensions>
        <labels>
          #for $dataset in $track.data_format.annotation:
            <label>${dataset.element_identifier}</label>
          #end for
        </labels>

        <category>${track.category}</category>
        <format>${track.data_format.data_format_select}</format>

        <options>
            <style>
              #if str($track.data_format.data_format_select) == "gene_calls" or  str($track.data_format.data_format_select) == "blast":
                <className>${track.data_format.jbstyle.style_classname}</className>
                <description>${track.data_format.jbstyle.style_description}</description>
                <label>${track.data_format.jbstyle.style_label}</label>
                <height>${track.data_format.jbstyle.style_height}</height>
              #end if
            </style>
        #if str($track.data_format.data_format_select) == "wiggle":
            <wiggle>
                <type>${track.data_format.xyplot}</type>
                <variance_band>${track.data_format.var_band}</variance_band>
              #if str($track.data_format.scaling.scale_select) == "auto_local":
                <autoscale>local</autoscale>
              #else if str($track.data_format.scaling.scale_select) == "auto_global":
                <autoscale>global</autoscale>
              #else:
                <min>${track.data_format.scaling.minimum}</min>
                <max>${track.data_format.scaling.maximum}</max>
              #end if

              ## Wiggle tracks need special color config
                <color_config>${track.data_format.jbcolor.color.color_select}</color_config>
              #if str($track.data_format.jbcolor.color.color_select) != "automatic":
                <color_pos>${track.data_format.jbcolor.color.style_pos_color}</color_pos>
                <color_neg>${track.data_format.jbcolor.color.style_neg_color}</color_neg>
              #else:
                <color>__auto__</color>
              #end if

              ## Bicolor pivot config
              #if str($track.data_format.jbcolor.bicolor_pivot.bicolor_pivot_select) == "zero":
                <bicolor_pivot>zero</bicolor_pivot>
              #else if str($track.data_format.jbcolor.bicolor_pivot.bicolor_pivot_select) == "mean":
                <bicolor_pivot>mean</bicolor_pivot>
              #else:
                <bicolor_pivot>${track.data_format.jbcolor.bicolor_pivot.pivot_point}</bicolor_pivot>
              #end if
            </wiggle>
        #else if str($track.data_format.data_format_select) == "pileup":
            <pileup>
                <auto_snp>${track.data_format.auto_snp}</auto_snp>
                <bam_indices>
                    #for $dataset in $track.data_format.annotation:
                    <bam_index>${dataset.metadata.bam_index}</bam_index>
                    #end for
                </bam_indices>
            </pileup>
        #else if str($track.data_format.data_format_select) == "blast":
            <blast>
                <parent>${track.data_format.blast_parent}</parent>
                <protein>${track.data_format.is_protein}</protein>
                <min_gap>${track.data_format.min_gap}</min_gap>
                <match>true</match>
            </blast>
        #else if str($track.data_format.data_format_select) == "gene_calls":
            <gff>
                <match>${track.data_format.match_part}</match>
            </gff>
        #end if

          #if str($track.data_format.data_format_select) == "gene_calls" or  str($track.data_format.data_format_select) == "blast":
            <scaling>
                <score>
              #if str($track.data_format.jbcolor_scale.color_score.color_score_select) == "none":
                    <method>ignore</method>
                  #if str($track.data_format.jbcolor_scale.color_score.color.color_select) == "automatic":
                    <color>__auto__</color>
                  #else
                    <color>${track.data_format.jbcolor_scale.color_score.color.style_color}</color>
                  #end if
              #else
                    <method>score</method>
                    <algo>${track.data_format.jbcolor_scale.color_score.score_scaling}</algo>
                    <scales>
                        <type>${track.data_format.jbcolor_scale.color_score.score_scales.scale_select}</type>

                      #if str($track.data_format.jbcolor_scale.color_score.score_scales.scale_select) == "manual":
                        <min>${track.data_format.jbcolor_scale.color_score.score_scales.minimum}</min>
                        <max>${track.data_format.jbcolor_scale.color_score.score_scales.maximum}</max>
                      #end if
                    </scales>
                    <scheme>
                        <type>${track.data_format.jbcolor_scale.color_score.color_scheme.score_scheme}</type>
                    ## auto_color
                    #if str($track.data_format.jbcolor_scale.color_score.color_scheme.score_scheme) == "opacity":
                      #if str($track.data_format.jbcolor_scale.color_score.color_scheme.color.color_select) == "automatic":
                        <color>__auto__</color>
                      #else
                        <color>${track.data_format.jbcolor_scale.color_score.color_scheme.color.style_color}</color>
                      #end if
                    #else
                        <brewer>${track.data_format.jbcolor_scale.color_score.color_scheme.brewer_scheme}</brewer>
                    #end if
                    </scheme>
              #end if
              </score>
            </scaling>
        #end if
        </options>
    </track>
    #end for
</tracks>
]]>
      </configfile>
  </configfiles>
  <inputs>
    <param label="Fasta Sequence(s)"
           name="genomes"
           type="data"
           format="fasta"
           multiple="True"/>
    <repeat name="data_tracks" title="Annotation Track">
        <param label="Track Category"
               name="category"
               type="text"
               value="Default"
               help="Organise your tracks into Categories for a nicer end-user experience"/>
        <conditional name="data_format" label="Track Options">
            <param type="select" label="Track Type" name="data_format_select">
                <option value="gene_calls">GFF/GFF3/BED/GBK Featuers</option>
                <option value="pileup">BAM Pileups</option>
                <option value="blast">Blast XML</option>
                <option value="wiggle">BigWig XY</option>
                <option value="vcf">VCF SNPs</option>
            </param>
            <when value="blast">
                <expand macro="input_conditional" label="BlastXML Track Data" format="blastxml" />

                <param label="Features used in Blast Search"
                       help="in GFF3. This is required so we know where to map features. E.g. where results of which CDS Protein32 match up to. The query IDs in your blast results should MATCH some feature IDs in your GFF3 file."
                       format="gff3"
                       name="blast_parent"
                       type="data"/>

                <param label="Minimum Gap Size"
                       help="before a new match_part feature is created"
                       name="min_gap"
                       type="integer"
                       value="10"
                       min="2" />
                <param label="Is this a protein blast search?"
                       type="boolean"
                       name="is_protein"
                       truevalue="true"
                       falsevalue="false" />

                <expand macro="track_styling"
                        classname="feature"
                        label="description"
                        description="Hit_titles"
                        height="600px"/>
                <expand macro="color_selection"
                        token_scaling_lin_select="false"
                        token_scaling_log_select="true" />
            </when>
            <when value="vcf">
                <expand macro="input_conditional" label="SNP Track Data" format="vcf" />
            </when>
            <when value="gene_calls">
                <expand macro="input_conditional" label="GFF/GFF3/BED Track Data" format="gff,gff3,bed" />
                <param label="This is match/match_part data"
                       type="boolean"
                       name="match_part"
                       truevalue="true"
                       falsevalue="false" />
                <expand macro="track_styling" />
                <expand macro="color_selection" />
            </when>
            <when value="pileup">
                <expand macro="input_conditional" label="BAM Track Data" format="bam" />
                <param label="Autogenerate SNP Track"
                       help="Not recommended for deep coverage BAM files"
                       type="boolean"
                       name="auto_snp"
                       truevalue="true"
                       falsevalue="false" />
            </when>
            <when value="wiggle">
                <expand macro="input_conditional" label="BigWig Track Data" format="bigwig" />

                <param label="Use XYPlot"
                       help="instead of continuous colored band"
                       type="boolean"
                       name="xyplot"
                       truevalue="JBrowse/View/Track/Wiggle/XYPlot"
                       falsevalue="JBrowse/View/Track/Wiggle/Density" />
                <param label="Show variance band"
                       help="Only for XYPlots"
                       type="boolean"
                       name="var_band"
                       truevalue="true"
                       falsevalue="false" />

                <conditional name="scaling" label="Scaling">
                    <param type="select" label="Track Scaling" name="scale_select">
                        <option value="auto_local">Autoscale (local)</option>
                        <option value="auto_global">Autoscale (global)</option>
                        <option value="fixed">Specify Min/Max</option>
                    </param>
                    <when value="auto_local"></when>
                    <when value="auto_global"></when>
                    <when value="fixed">
                        <param label="Track minimum" name="minimum"
                            type="integer" value="0" />
                        <param label="Track maximum" name="maximum"
                            type="integer" value="100" />
                    </when>
                </conditional>
                <expand macro="color_selection_minmax" />
            </when>
        </conditional>
    </repeat>
  </inputs>
  <outputs>
      <data format="html" name="output" label="JBrowse on $on_string"/>
  </outputs>
  <help><![CDATA[
Build a static JBrowse visualization of a genome and some associated datasets.

@ATTRIBUTION@
]]></help>
  <tests>
    <test>
      <param name="genomes" value="merlin.fa"/>
      <output name="output" file="out-0/output.html" >
        <extra_files type="file" name="output/JBrowse-1.11.6/data/seq/refSeqs.json" value="peakcalling_macs/test2/Galaxy_Test_Run_model.pdf" compare="re_match"/>
      </output>
    </test>
  </tests>
  <citations>
    <citation type="doi">10.1101/gr.094607.109</citation>
  </citations>
</tool>

