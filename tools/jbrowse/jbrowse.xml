<tool id="jbrowse" name="JBrowse" version="0.3">
  <description>genome browser</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <version_command>python jbrowse.py --version</version_command>
  <command><![CDATA[
mkdir -p $output.files_path &&
## Copy the XML file into the directory, mostly for debugging
## but nice if users want to reproduce locally
cp $trackxml $output.files_path/galaxy.xml &&

## Once that's done, we run the python script to handle the real work
python $__tool_directory__/jbrowse.py
$trackxml

## --jbrowse \${JBROWSE_SOURCE_DIR}
--jbrowse $__tool_directory__/JBrowse-1.11.6
$standalone
--outdir $output.files_path;

cat $output.files_path/index.html > $output;
]]></command>
  <configfiles>
      <configfile name="trackxml"><![CDATA[<?xml version="1.0"?>
<root>
    <metadata>
        <gencode>$gencode</gencode>
        <genomes>
            #for $genome in $genomes:
                <genome>$genome</genome>
            #end for
        </genomes>
    </metadata>
    <tracks>
        #for $tg in $track_groups:
        #for $track in $tg.data_tracks:
        <track cat="${tg.category}" format="${track.data_format.data_format_select}">
            <files>
              #for $dataset in $track.data_format.annotation:
              <trackFile path="${dataset}" ext="${dataset.ext}" label="${dataset.element_identifier}" />
              #end for
            </files>

            <options>
                <style>
                  #if str($track.data_format.data_format_select) == "gene_calls" or  str($track.data_format.data_format_select) == "blast":
                    <className>${track.data_format.jbstyle.style_classname}</className>
                    <description>${track.data_format.jbstyle.style_description}</description>
                    <label>${track.data_format.jbstyle.style_label}</label>
                    <height>${track.data_format.jbstyle.style_height}</height>
                  #end if
                </style>
            #if str($track.data_format.data_format_select) == "wiggle":
                <wiggle>
                    <type>${track.data_format.xyplot}</type>
                    <variance_band>${track.data_format.var_band}</variance_band>
                  #if str($track.data_format.scaling.scale_select) == "auto_local":
                    <autoscale>local</autoscale>
                  #else if str($track.data_format.scaling.scale_select) == "auto_global":
                    <autoscale>global</autoscale>
                  #else:
                    <min>${track.data_format.scaling.minimum}</min>
                    <max>${track.data_format.scaling.maximum}</max>
                  #end if

                  ## Wiggle tracks need special color config
                  #if str($track.data_format.jbcolor.color.color_select) != "automatic":
                    <color_pos>${track.data_format.jbcolor.color.style_pos_color}</color_pos>
                    <color_neg>${track.data_format.jbcolor.color.style_neg_color}</color_neg>
                  #else:
                    <color_pos>__auto__</color_pos>
                    <color_neg>__auto__</color_neg>
                  #end if

                  ## Bicolor pivot config
                  #if str($track.data_format.jbcolor.bicolor_pivot.bicolor_pivot_select) == "zero":
                    <bicolor_pivot>zero</bicolor_pivot>
                  #else if str($track.data_format.jbcolor.bicolor_pivot.bicolor_pivot_select) == "mean":
                    <bicolor_pivot>mean</bicolor_pivot>
                  #else:
                    <bicolor_pivot>${track.data_format.jbcolor.bicolor_pivot.pivot_point}</bicolor_pivot>
                  #end if
                </wiggle>
            #else if str($track.data_format.data_format_select) == "pileup":
                <pileup>
                    <auto_snp>${track.data_format.auto_snp}</auto_snp>
                    <bam_indices>
                        #for $dataset in $track.data_format.annotation:
                        <bam_index>${dataset.metadata.bam_index}</bam_index>
                        #end for
                    </bam_indices>
                </pileup>
            #else if str($track.data_format.data_format_select) == "blast":
                <blast>
                  #if str($track.data_format.blast_parent) != "":
                    <parent>${track.data_format.blast_parent}</parent>
                  #end if
                    <protein>${track.data_format.is_protein}</protein>
                    <min_gap>${track.data_format.min_gap}</min_gap>
                </blast>
            #else if str($track.data_format.data_format_select) == "gene_calls":
                <gff>
                  #if $track.data_format.match_part.match_part_select:
                    <match>${track.data_format.match_part.name}</match>
                  #end if
                </gff>
            #end if

              #if str($track.data_format.data_format_select) == "gene_calls" or str($track.data_format.data_format_select) == "blast":
                <scaling>
                  #if str($track.data_format.jbcolor_scale.color_score.color_score_select) == "none":
                        <method>ignore</method>
                        <scheme>
                          #if str($track.data_format.jbcolor_scale.color_score.color.color_select) == "automatic":
                            <color>__auto__</color>
                          #else
                            <color>${track.data_format.jbcolor_scale.color_score.color.style_color}</color>
                          #end if
                        </scheme>
                  #else
                        <method>score</method>
                        <algo>${track.data_format.jbcolor_scale.color_score.score_scaling}</algo>
                        <scales>
                            <type>${track.data_format.jbcolor_scale.color_score.score_scales.scale_select}</type>

                          #if str($track.data_format.jbcolor_scale.color_score.score_scales.scale_select) == "manual":
                            <min>${track.data_format.jbcolor_scale.color_score.score_scales.minimum}</min>
                            <max>${track.data_format.jbcolor_scale.color_score.score_scales.maximum}</max>
                          #end if
                        </scales>
                        <scheme>
                            <type>${track.data_format.jbcolor_scale.color_score.color_scheme.score_scheme}</type>
                        ## auto_color
                        #if str($track.data_format.jbcolor_scale.color_score.color_scheme.score_scheme) == "opacity":
                          #if str($track.data_format.jbcolor_scale.color_score.color_scheme.color.color_select) == "automatic":
                            <color>__auto__</color>
                          #else
                            <color>${track.data_format.jbcolor_scale.color_score.color_scheme.color.style_color}</color>
                          #end if
                        #end if
                        </scheme>
                  #end if
                </scaling>
            #end if
            </options>
        </track>
        #end for
        #end for
    </tracks>
</root>
]]>
      </configfile>
  </configfiles>
  <inputs>
    <param label="Fasta Sequence(s)"
           name="genomes"
           type="data"
           format="fasta"
           multiple="True"/>
    <param name="standalone" label="Produce Standalone Instance" type="boolean" truevalue="--standalone" falsevalue="" help="Produce a full, working JBrowse instance or just the data directory. Data dir mode is experimental and intended to be used with Apollo" selected="True"/>

    <param label="Genetic Code" name="gencode" type="select">
      <option value="1">1. The Standard Code</option>
      <option value="2">2. The Vertebrate Mitochondrial Code</option>
      <option value="3">3. The Yeast Mitochondrial Code</option>
      <option value="4">4. The Mold, Protozoan, and Coelenterate Mitochondrial Code and the Mycoplasma/Spiroplasma Code</option>
      <option value="5">5. The Invertebrate Mitochondrial Code</option>
      <option value="6">6. The Ciliate, Dasycladacean and Hexamita Nuclear Code</option>
      <option value="9">9. The Echinoderm and Flatworm Mitochondrial Code</option>
      <option value="10">10. The Euplotid Nuclear Code</option>
      <option value="11">11. The Bacterial, Archaeal and Plant Plastid Code</option>
      <option value="12">12. The Alternative Yeast Nuclear Code</option>
      <option value="13">13. The Ascidian Mitochondrial Code</option>
      <option value="14">14. The Alternative Flatworm Mitochondrial Code</option>
      <option value="16">16. Chlorophycean Mitochondrial Code</option>
      <option value="21">21. Trematode Mitochondrial Code</option>
      <option value="22">22. Scenedesmus obliquus Mitochondrial Code</option>
      <option value="23">23. Thraustochytrium Mitochondrial Code</option>
      <option value="24">24. Pterobranchia Mitochondrial Code</option>
      <option value="25">25. Candidate Division SR1 and Gracilibacteria Code</option>
   </param>

    <repeat name="track_groups" title="Track Group">
        <param label="Track Category"
               name="category"
               type="text"
               value="Default"
               help="Organise your tracks into Categories for a nicer end-user experience" optional="False"/>
    <repeat name="data_tracks" title="Annotation Track">
        <conditional name="data_format" label="Track Options">
            <param type="select" label="Track Type" name="data_format_select">
                <option value="gene_calls">GFF/GFF3/BED/GBK Features</option>
                <option value="pileup">BAM Pileups</option>
                <option value="blast">Blast XML</option>
                <option value="wiggle">BigWig XY</option>
                <option value="vcf">VCF SNPs</option>
            </param>
            <when value="blast">
                <expand macro="input_conditional" label="BlastXML Track Data" format="blastxml" />

                <param label="Features used in Blast Search"
                       help="in GFF3. This is used  so we know where to map features. E.g. where results of which CDS Protein32 match up to. The query IDs in your blast results should MATCH some feature IDs in your GFF3 file. This is an optional field and is most useful if using JBrowse to display protein blast results on a DNA genome. blastn results don't need this, blastp results on a protein sequence don't need this."
                       format="gff3"
                       name="blast_parent"
                       optional="true"
                       type="data"/>

                <param label="Minimum Gap Size"
                       help="before a new match_part feature is created"
                       name="min_gap"
                       type="integer"
                       value="10"
                       min="2" />
                <param label="Is this a protein blast search?"
                       type="boolean"
                       name="is_protein"
                       truevalue="true"
                       falsevalue="false" />

                <expand macro="track_styling"
                        classname="feature"
                        label="description"
                        description="Hit_titles"
                        height="600px"/>
                <expand macro="color_selection"
                        token_scaling_lin_select="false"
                        token_scaling_log_select="true" />
            </when>
            <when value="vcf">
                <expand macro="input_conditional" label="SNP Track Data" format="vcf" />
            </when>
            <when value="gene_calls">
                <expand macro="input_conditional" label="GFF/GFF3/BED Track Data" format="gff,gff3,bed" />
                <conditional name="match_part" label="match/match_part data">
                    <param label="This is match/match_part data"
                           type="boolean"
                           name="match_part_select"
                           truevalue="true"
                           falsevalue="false" />
                    <when value="true">
                        <param label="Match Part Feature Type"
                               name="name"
                               type="text"
                               value="match"
                               help="Match_parts have several options for the parent feature type, such as cDNA_match, match, translated_nucleotide_match, etc. Please select the appropriate one here"
                               optional="False"/>
                    </when>
                    <when value="false" />
                </conditional>
                <expand macro="track_styling" />
                <expand macro="color_selection" />
            </when>
            <when value="pileup">
                <expand macro="input_conditional" label="BAM Track Data" format="bam" />
                <param label="Autogenerate SNP Track"
                       help="Not recommended for deep coverage BAM files"
                       type="boolean"
                       name="auto_snp"
                       truevalue="true"
                       falsevalue="false" />
            </when>
            <when value="wiggle">
                <expand macro="input_conditional" label="BigWig Track Data" format="bigwig" />

                <param label="Use XYPlot"
                       help="instead of continuous colored band"
                       type="boolean"
                       name="xyplot"
                       truevalue="JBrowse/View/Track/Wiggle/XYPlot"
                       falsevalue="JBrowse/View/Track/Wiggle/Density" />
                <param label="Show variance band"
                       help="Only for XYPlots"
                       type="boolean"
                       name="var_band"
                       truevalue="true"
                       falsevalue="false" />

                <conditional name="scaling" label="Scaling">
                    <param type="select" label="Track Scaling" name="scale_select">
                        <option value="auto_local">Autoscale (local)</option>
                        <option value="auto_global" selected="true">Autoscale (global)</option>
                        <option value="fixed">Specify Min/Max</option>
                    </param>
                    <when value="auto_local"></when>
                    <when value="auto_global"></when>
                    <when value="fixed">
                        <param label="Track minimum" name="minimum"
                            type="integer" value="0" />
                        <param label="Track maximum" name="maximum"
                            type="integer" value="100" />
                    </when>
                </conditional>
                <expand macro="color_selection_minmax" />
            </when>
        </conditional>
    </repeat>
    </repeat>
  </inputs>
  <outputs>
      <data format="html" name="output" label="JBrowse on $on_string"/>
  </outputs>
  <help><![CDATA[
Build a static JBrowse visualization of a genome and some associated datasets.

@ATTRIBUTION@
]]></help>
  <tests>
    <test>
      <param name="genomes" value="merlin.fa"/>
      <output name="output" file="out-0/output.html" >
        <extra_files type="file" name="output/JBrowse-1.11.6/data/seq/refSeqs.json" value="peakcalling_macs/test2/Galaxy_Test_Run_model.pdf" compare="re_match"/>
      </output>
    </test>
  </tests>
  <citations>
    <citation type="doi">10.1101/gr.094607.109</citation>
  </citations>
</tool>

