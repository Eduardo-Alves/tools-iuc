<tool id="art_solid" name="ART SOLiD" version="2014.11.03.0">
  <description>simulates SOLiD data</description>
  <macros>
      <import>macros.xml</import>
  </macros>
  <expand macro="stdio" />
  <command><![CDATA[
art_SOLiD

$sam

#if $rndSeed and $rndSeed > -1:
    -r $rndSeed
#end if

#if $generate.amplicon.use_amplicon == "amplicon_true":
    -A

    #if $generate.choice == "single_end":
    s
    #else if $generate.choice == "paired_end":
    p
    #else:
    m
    #end if

#end if

$input_seq_file
output

#if $generate.choice == "single_end":
    $generate.LEN_READ
    $fold_coverage
#else if $generate.choice == "paired_end":
    $generate.LEN_READ_f3
    $generate.LEN_READ_f5
    $fold_coverage
    $generate.MEAN_FRAG_LEN
    $generate.STD_DEV
#else:
    $generate.LEN_READ
    $fold_coverage
    $generate.MEAN_FRAG_LEN
    $generate.STD_DEV
#end if

#if $generate.amplicon.use_amplicon == "amplicon_true":
    #if $generate.choice == "single_end":
        $generate.amplicon.reads_per_amplicon
    #else:
        $generate.amplicon.read_pairs_per_amplicon
    #end if
#end if
;

## Move output to correct locations
#if $generate.choice == "single_end":
    mv output.fq output1.fq;
#else if $generate.choice == "paired_end":
    mv output_F3.fq output1.fq;
    mv output_F5.fq output2.fq;
#end if

]]></command>
  <inputs>
    <param label="DNA/RNA reference sequence" format="fasta" name="input_seq_file" type="data"/>
    <param label="the fold of read coverage over the reference sequences" name="fold_coverage" type="integer" value="20"/>

    <conditional name="generate">
        <param name="choice" type="select" label="Type of data to generate">
            <option value="single_end">Single-End</option>
            <option value="paired_end">Paired-End</option>
        </param>
        <when value="single_end">
            <param name="LEN_READ" type="integer" label="Length of F3/R3 reads" value="100" />
            <conditional name="amplicon">
                <param name="use_amplicon" type="boolean" label="Run Amplicon Sequencing Simulation" truevalue="amplicon_true" falsevalue="amplicon_false" />
                <when value="amplicon_true">
                    <param label="number of reads per amplicon (for 5'end amplicon sequencing)" name="reads_per_amplicon" type="integer" value="0"/>
                </when>
            </conditional>
        </when>
        <when value="paired_end">
            <param name="LEN_READ_f3" type="integer" label="Length of F3 reads" value="100" />
            <param name="LEN_READ_f5" type="integer" label="Length of F5 reads" value="100" />
            <param label="the average DNA fragment size for paired-end read simulation" name="MEAN_FRAG_LEN" type="integer" value="200" minimum="101" />
            <param label="the standard deviation of the DNA fragment size for paired-end read simulation" name="STD_DEV" type="integer" value="0"/>
            <conditional name="amplicon">
                <param name="use_amplicon" type="boolean" label="Run Amplicon Sequencing Simulation" truevalue="amplicon_true" falsevalue="amplicon_false" />
                <when value="amplicon_true">
                    <param label="number of read pairs per amplicon (for two-end amplicon sequencing)" name="read_pairs_per_amplicon" type="integer" value="0"/>
                </when>
            </conditional>
        </when>
        <when value="mate_pair">
            <param name="LEN_READ" type="integer" label="Length of F3/R3 reads" value="100" />
            <param label="the average DNA fragment size for mate-pair read simulation" name="MEAN_FRAG_LEN" type="integer" value="200" minimum="101" />
            <param label="the standard deviation of the DNA fragment size for paired-end read simulation" name="STD_DEV" type="integer" value="0"/>
            <conditional name="amplicon">
                <param name="use_amplicon" type="boolean" label="Run Amplicon Sequencing Simulation" truevalue="amplicon_true" falsevalue="amplicon_false" />
                <when value="amplicon_true">
                    <param label="number of read pairs per amplicon (for two-end amplicon sequencing)" name="read_pairs_per_amplicon" type="integer" value="0"/>
                </when>
            </conditional>
        </when>
    </conditional>

    <expand macro="sam" />
    <expand macro="rndSeed" />

  </inputs>
  <outputs>
    <data format="fastq" name="output_fq1" from_work_dir="output1.fq" label="Simulated of 454 sequencing of $input_seq_file.name (Forward)"/>
    <data format="fastq" name="output_fq2" from_work_dir="output2.fq" label="Simulated of 454 sequencing of $input_seq_file.name (Reverse)">
        <filter>generate['choice'] != "single_end"</filter>
    </data>
    <data format="sam" name="output_sam" from_work_dir="output.sam" label="Mapping of Simulated 454 data to $input_seq_file.name">
        <filter>sam</filter>
    </data>
    <!-- todo? map file -->
  </outputs>
  <tests>
      <!--  Single End tests -->
      <test>
          <param name="rndSeed" value="42" />
          <param name="input_seq_file" value="input.fa" />
          <param name="LEN_READ" value="25" />
          <param name="fold_coverage" value="10" />
          <param name="choice" value="single_end" />
          <param name="sam" value="True" />

          <output name="output_fq1" file="art.solid.01.fq" />
      </test>
      <test>
          <param name="rndSeed" value="42" />
          <param name="input_seq_file" value="input.fa" />
          <param name="fold_coverage" value="20" />
          <param name="choice" value="paired_end" />
          <param name="LEN_READ_f3" value="50" />
          <param name="LEN_READ_f5" value="50" />
          <param name="MEAN_FRAG_LEN" value="75" />
          <param name="STD_DEV" value="10" />
          <param name="sam" value="True" />

          <output name="output_fq1" file="art.solid.02_F3.fq" />
          <output name="output_fq2" file="art.solid.02_F5.fq" />
          <output name="output_sam" file="art.solid.02.sam" lines_diff="2"/>
      </test>
  </tests>
  <help><![CDATA[
Art SOLiD Simulator
===================

ART_SOLiD  is a simulation program to generate sequence read data of SOLiD
sequencing reads. ART generates reads according to a SOLiD read error profile.
The built-in error profile is an empiricial error profile summarized from large
SOLiD sequencing data. ART has been using for testing or benchmarking a variety
of method or tools for next-generation sequencing data analysis, including read
alignment, de novo assembly, detection of SNP, CNV, or other structure
variation.

art_SOLiD can generate both single-end, matepair, and paired-end of SOLiD
sequencing platform. art_SOLiD also support amplicon sequencing simulation with
RNA references.
      ]]></help>
  <expand macro="citation" />
</tool>

