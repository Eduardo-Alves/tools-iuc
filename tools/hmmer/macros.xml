<?xml version="1.0"?>
<macros>
  <xml name="requirements">
    <requirements>
      <requirement type="package" version="3.0">hmmer3</requirement>
      <yield/>
    </requirements>
  </xml>
  <token name="@WRAPPER_VERSION@">3.0</token>
  <xml name="stdio">
    <stdio>
      <!-- Anything other than zero is an error -->
      <exit_code range="1:"/>
      <exit_code range=":-1"/>
      <!-- In case the return code has not been set propery check stderr too -->
      <regex match="Error:"/>
      <regex match="Exception:"/>
    </stdio>
  </xml>
  <token name="@THRESHOLDS@">
-E $E
--domE $domE

#if $T:
-T $T
#end if

#if $domT:
--domT $domT
#end if

#if $incE:
--incE $incE
#end if

#if $incT:
--incT $incT
#end if

#if $incdomE:
--incdomE $incdomE
#end if

#if $incdomT:
--incdomT $incdomT
#end if
  </token>
  <xml name="thresholds_xml">
    <!-- Options controlling reporting thresholds -->
    <param name="E" label="report sequences &lt;= this E-Value threshold in output" help="(-E)" value="10.0" type="float" min="0"/>
    <param name="domE" label="report domains &lt;= this E-Value threshold in output" help="(--domE)" value="10.0" type="float" min="0"/>
    <param name="T" label="report sequences &gt;= this score threshold in output" help="(-T)" type="float" optional="True"/>
    <param name="domT" label="report domains &gt;= this score threshold in output" help="(--domT)" type="float" optional="True"/>
    <!-- Options controlling inclusion (significance) thresholds -->
    <param name="incE" label="consider sequences &lt;= this E-Value threshold as significant" help="(--incE)" type="float" optional="True"/>
    <param name="incdomE" label="consider domains &lt;= this E-Value threshold as significant" help="(--incdomE)" type="float" optional="True"/>
    <param name="incT" label="consider sequences &gt;= this score threshold as significant" help="(--incT)" type="float" optional="True"/>
    <param name="incdomT" label="consider domains &gt;= this score threshold as significant" help="(--incdomT)" type="float" optional="True"/>
  </xml>
  <token name="@THRESHOLDS_NODOM@">
-E $E

#if $T:
-T $T
#end if

#if $incE:
--incE $incE
#end if

#if $incT:
--incT $incT
#end if
  </token>
  <xml name="thresholds_nodom">
    <!-- Options controlling reporting thresholds -->
    <param name="E" label="report sequences &lt;= this E-Value threshold in output" help="(-E)" value="10.0" type="float" min="0"/>
    <param name="T" label="report sequences &gt;= this score threshold in output" help="(-T)" type="float" optional="True"/>
    <!-- Options controlling inclusion (significance) thresholds -->
    <param name="incE" label="consider sequences &lt;= this E-Value threshold as significant" help="(--incE)" type="float" optional="True"/>
    <param name="incT" label="consider sequences &gt;= this score threshold as significant" help="(--incT)" type="float" optional="True"/>
  </xml>
  <token name="@ACCEL_HEUR@">
$max
--F1 $F1
--F2 $F2
--F3 $F3
$nobias

  </token>
  <xml name="accel_heur_xml">
    <!-- Options controlling acceleration heuristics -->
    <param name="max" type="boolean" truevalue="--max" label="Turn all heuristic filters off (less speed, more power)" help="(--max)" falsevalue=""/>
    <param name="F1" type="float" label="Stage 1 (MSV) threshold: promote hits w/ P &lt;= F1" help="(--F1)" value="0.02"/>
    <param name="F2" type="float" label="Stage 2 (Vit) threshold: promote hits w/ P &lt;= F2" help="(--F2)" value="1e-3"/>
    <param name="F3" type="float" label="Stage 3 (Fwd) threshold: promote hits w/ P &lt;= F3" help="(--F3)" value="1e-5"/>
    <param name="nobias" type="boolean" truevalue="--nobias" label="Turn off composition bias filter" help="(--nobias)" falsevalue=""/>
  </xml>
  <token name="@EVAL_CALIB@">
--EmL $EmL
--EmN $EmN
--EvL $EvL
--EvN $EvN
--EfL $EfL
--EfN $EfN
--Eft $Eft
  </token>
  <xml name="eval_calib_xml">
    <!-- Control of E-value calibration -->
    <param name="EmL" type="integer" value="200" min="1" help="(--EmL)" label="Length of sequences for MSV Gumbel mu fit"/>
    <param name="EmN" type="integer" value="200" min="1" help="(--EmN)" label="Number of sequences for MSV Gumbel mu fit"/>
    <param name="EvL" type="integer" value="200" min="1" help="(--EvL)" label="Length of sequences for Viterbi Gumbel mu fit"/>
    <param name="EvN" type="integer" value="200" min="1" help="(--EvN)" label="Number of sequences for Viterbi Gumbel mu fit"/>
    <param name="EfL" type="integer" value="100" min="1" help="(--EfL)" label="Length of sequences for Forward exp tail tau fit"/>
    <param name="EfN" type="integer" value="200" min="1" help="(--EfN)" label="Number of sequences for Forward exp tail tau fit"/>
    <param name="Eft" type="float" value="0.04" min="0" max="1" help="(--Eft)" label="tail mass for Forward exponential tail tau fit"/>
  </xml>
  <token name="@OFORMAT_WITH_OPTS@">
#if 'tblout' in str($oformat):
    --tblout $tblout
#end if

#if 'domtblout' in str($oformat):
    --domtblout $domtblout
#end if

#if 'pfamtblout' in str($oformat):
    --pfamtblout $pfamtblout
#end if

$acc $noali $notextw
  </token>
  <xml name="oformat_with_opts">
    <!-- Options directing output -->
    <param name="oformat" multiple="True" display="checkboxes" label="Output Formats" type="select">
      <option value="tblout" selected="true">Table of per-sequence hits (--tblout)</option>
      <option value="domtblout" selected="true">Table of per-domain hits (--domtblout)</option>
      <option value="pfamtblout" selected="true">Table of hits and domains in Pfam format (--pfamtblout)</option>
    </param>
    <param name="acc" type="boolean" truevalue="--acc" falsevalue="" label="Prefer accessions over names in output" help="(--acc)"/>
    <param name="noali" type="boolean" truevalue="--noali" falsevalue="" label="Don't output alignments, so output is smaller" help="(--noali)"/>
    <param name="notextw" type="boolean" truevalue="--notextw" falsevalue="" label="Unlimited ASCII text output line width" help="(--notextw)"/>
  </xml>
  <xml name="oformat_test">
      <param name="notextw" value="True" />
  </xml>
  <!-- TODO: tblout will match 'pfamtblout,dfamtblout' -->
  <token name="@OFORMAT_WITH_OPTS_N@">
#if 'tblout' in str($oformat):
    --tblout $tblout
#end if

#if 'dfamtblout' in str($oformat):
    --dfamtblout $dfamtblout
#end if

#if 'aliscoresout' in str($oformat):
    --aliscoresout $aliscoresout
#end if

$acc $noali $notextw
  </token>
  <xml name="oformat_with_opts_n">
    <!-- Options directing output -->
    <param name="oformat" multiple="True" display="checkboxes" label="Output Formats" type="select">
      <option value="tblout" selected="true">Table of hits (--tblout)</option>
      <option value="dfamtblout" selected="true">Table of hits in Dfam format (--dfamtblout)</option>
      <option value="aliscoresout">Sace scores for each position in each alignment to file (--aliscoresout)</option>
    </param>
    <param name="acc" type="boolean" truevalue="--acc" falsevalue="" label="Prefer accessions over names in output" help="(--acc)"/>
    <param name="noali" type="boolean" truevalue="--noali" falsevalue="" label="Don't output alignments, so output is smaller" help="(--noali)"/>
    <param name="notextw" type="boolean" truevalue="--notextw" falsevalue="" label="Unlimited ASCII text output line width" help="(--notextw)"/>
  </xml>
  <token name="@HSSI@">
#if $hssi.hssi_select == "singlemx":
    --popen $hssi.popen
    --pextend $hssi.pextend
#end if
  </token>
  <xml name="hssi">
    <!-- Handling single sequence inputs -->
    <conditional name="hssi">
      <param name="hssi_select" type="select" label="Options for handling single sequence inputs">
        <option value="false" selected="true">Disable</option>
        <option value="singlemx">Use substitution score matrix for single-sequence inputs</option>
      </param>
      <when value="singlemx">
        <param name="popen" type="float" value="0.1" label="gap open probability" help="(--popen)"/>
        <param name="pextend" type="float" value="0.1" label="gap extend probability" help="(--pextend)"/>
      </when>
      <!-- -mx <s>      : substitution score matrix (built-in matrices, with -singlemx)-->
      <!-- -mxfile <f>  : read substitution score matrix from file <f> (with -singlemx)-->
    </conditional>
  </xml>
  <token name="@CPU@">
      --cpu \${GALAXY_SLOTS:-2}
  </token>
  <token name="@SEED@">
      --seed $seed
  </token>
  <xml name="seed">
    <param name="seed" label="RNG seed, 0 generates a random seed" value="42" type="integer" help="(--seed)"/>
  </xml>
  <xml name="seed_test">
      <param name="seed" value="4" />
  </xml>
  <token name="@ADV_OPTS@">
$nonull2

#if $Z:
-Z $Z
#end if

#if $domZ:
--domZ $domZ
#end if
  </token>
  <xml name="adv_opts">
    <!-- Other options -->
    <param name="nonull2" type="boolean" truevalue="--nonull2" label="Turn off biased composition score corrections" help="(--nonull2)" falsevalue=""/>
    <param name="Z" type="integer" label="# of comparisons done for E-value calculation" help="(-Z)" optional="True"/>
    <param name="domZ" type="integer" label="# of significant sequences, for domain E-value calculation" help="(--domZ)" optional="True"/>
  </xml>
  <token name="@FORMAT_SELECTOR@">
      $input_format_select
  </token>
  <xml name="format_selector">
    <param name="input_format_select" type="select" label="Format of sequence and model">
      <option value="" selected="true">Guess Format</option>
      <option value="--amino">Protein</option>
      <option value="--dna">DNA</option>
      <option value="--rna">RNA</option>
    </param>
  </xml>
  <xml name="format_selector_noprot">
    <param name="input_format_select" type="select" label="Format of sequence and model">
      <option value="" selected="true">Guess Format</option>
      <option value="--dna">DNA</option>
      <option value="--rna">RNA</option>
    </param>
  </xml>
  <token name="@ARSWS@">
$arsws.arsws_select

#if $arsws.arsws_select == "--wblosum":
--wid $arsws.wid
#end if
  </token>
  <xml name="arsws">
    <!-- Alternative relative sequence weighting strategies -->
    <conditional name="arsws">
      <param name="arsws_select" type="select" label="Alternative relative sequence weighting strategies">
        <option value="--wpb" selected="true">Henikoff position-based weights (--wpb)</option>
        <option value="--wgsc">Gerstein/Sonnhammer/Chothia tree weights (--wgsc)</option>
        <option value="--wblosum">Henikoff simple filter weights (--wblosum)</option>
        <option value="--wnone">don't do any relative weighting; set all to 1 (--wnnoe)</option>
        <option value="--wgiven">use weights as given in MSA file (--wgiven)</option>
      </param>
      <when value="--wblosum">
        <param name="wid" label="Set identity cutoff" value="0.62" type="float" help="(--wid)"/>
      </when>
    </conditional>
  </xml>
  <token name="@AEEWS@">
#if $aeews.aeews_select != "":
--$aeews.aeews_select
    #if $aeews.aeews_select == "eent":
        --eset $aeews.eset
        --ere $aeews.ere
        --eent $aeews.eent
    #elif $aeews.aeews_select == "eclust":
        --eset $aeews.eset
        --edi $aeews.edi
    #end if
#end if
  </token>
  <xml name="aeews">
    <!-- Alternative effective sequence weighting strategies -->
    <conditional name="aeews">
      <param name="aeews_select" type="select" label="Alternative effective sequence weighting strategies">
        <option value="">Disabled</option>
        <option value="eent">Adjust eff seq # to achieve relative entropy target</option>
        <option value="eclust">Eff seq # is the # of single linkage clusters</option>
        <option value="enone">No effective seq # weighting: just use nseq</option>
      </param>
      <when value="eent">
        <param name="eset" type="float" value="0" label="set eff seq # for all models" help="(--eset)"/>
        <param name="ere" type="float" value="0" label="set minimum rel entropy/position" help="(--ere)"/>
        <param name="eent" type="float" value="45" label="set sigma param" help="(--esigma)"/>
      </when>
      <when value="eclust">
        <param name="eset" type="float" value="0" label="set eff seq # for all models" help="(--eset)"/>
        <param name="edi" type="float" value="0.62" label="set fractional identity cutoff" min="0" max="1" help="(--eid)"/>
      </when>
    </conditional>
  </xml>
  <token name="@CUT@">
$cut_ga
$cut_nc
$cut_tc
  </token>
  <xml name="cut">
    <param name="cut_ga" type="boolean" truevalue="--cut_ga" label="use profile's GA gathering cutoffs to set all thresholding" help="(--cut_ga)" falsevalue=""/>
    <param name="cut_nc" type="boolean" truevalue="--cut_nc" label="use profile's NC gathering cutoffs to set all thresholding" help="(--cut_nc)" falsevalue=""/>
    <param name="cut_tc" type="boolean" truevalue="--cut_tc" label="use profile's TC gathering cutoffs to set all thresholding" help="(--cut_tc)" falsevalue=""/>
  </xml>
  <token name="@MCSS@">
--$mcs.model_construction_strategy_select

#if $mcs.model_construction_strategy_select == "fast":
--symfrac $mcs.symfrac
#end if

  </token>
  <xml name="mcss">
    <!-- Alternative model construction strategies -->
    <conditional name="mcs">
      <param name="model_construction_strategy_select" type="select" label="Model Construction Strategy">
        <option value="fast" selected="true">Assign columns with &gt;= symfrac residues as consensus</option>
        <option value="hand">Manual construction (requires reference annotation)</option>
      </param>
      <when value="fast">
        <param name="symfrac" value="0.5" type="float" label="Sets sym fraction controlling --fast construction"/>
      </when>
    </conditional>
  </xml>
  <token name="@PRIOR@">
$aps_select
  </token>
  <xml name="prior">
    <param name="aps_select" type="select" label="Alternative Prior Strategies">
      <option value="" selected="true">Unspecified</option>
      <option value="--pnone">Don't use any prior; parameters are frequencies (--pnone)</option>
      <option value="--plaplace">Use a Laplace +1 prior (--plaplace)</option>
    </param>
  </xml>
  <xml name="citation">
    <citations>
      <citation type="doi">10.1093/nar/gkr367</citation>
    </citations>
  </xml>
  <token name="@LENGTHS@">
#if $w_beta:
--w_beta $w_beta
#end if

#if $w_length:
--w_length $w_length
#end if

  </token>
  <xml name="lengths">
    <param name="w_beta" label="Tail mass at which window length is determined"
        help="(--w_beta)" optional="True" type="float"/>
    <param name="w_length" label="Window Length"
        help="(--w_length)" optional="True" type="integer" />
  </xml>
  <token name="@ATTRIBUTION@"><![CDATA[
  ]]></token>
</macros>
