<tool id="stacks_procrad" name="STACKS : Process radtags"  force_history_refresh="True" version="@WRAPPER_VERSION@.0">
<description>Run the STACKS cleaning script</description> 
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <command><![CDATA[

    process_radtags

        #if $input_type.options_type_selector == "single":
            -f $input_type.input_single
        #else
            -1 $input_type.input_paired1
            -2 $input_type.input_paired2
        #end if

        -i $inputype
        -b $barcode
        
        $input_type.barcode_encoding

        #if str( $options_enzyme.options_enzyme_selector ) == "1":
            -e $options_enzyme.enzyme
        #else
            --renz_1 $options_enzyme.enzyme --renz_2 $options_enzyme.enzyme2
        #end if

        -y $outype # TODO support gz and default is "same as input"

        $capture

        -t $options_advanced.truncate
        
        -w $options_advanced.sliding
        -s $options_advanced.score
        
        $options_advanced.remove
        
        $options_advanced.discard
        
        $options_advanced.rescue
        
        --sample_name $sample_name
        --output_choice $options_output_infos_selector
        #if str( $options_output_infos_selector ) != "1":
            --output_archive $output_archive
        #end if

        &&

        ln -s process_radtags.log $output_log
    ]]></command>

    <configfiles>
        <configfile name="input_single">
#if str( $input_type.options_type_selector ) == "single":
#for $input in $input_type.inputs_single:
${input.display_name}::${input}
#end for
#end if
        </configfile>
        <configfile name="input_paired1">
#if str( $input_type.options_type_selector ) == "paired":
#for $input in $input_type.inputs_paired1:
${input.display_name}::${input}
#end for
#end if
        </configfile>
        <configfile name="input_paired2">
#if str( $input_type.options_type_selector ) == "paired":
#for $input in $input_type.inputs_paired2:
${input.display_name}::${input}
#end for
#end if
        </configfile>
    </configfiles> 

    <inputs>
        <conditional name="input_type">
            <param name="options_type_selector" type="select" label="Single-end or paired-end reads files">
                <option value="single" selected="True">Single-end files</option>
                <option value="paired">Paired-end files</option>
            </param>
            <when value="single">
                <param name="input_single" format="fastqsanger,fastq.gz" type="data" multiple="true" label="singles-end reads infile(s)" help="input files" />

                <param name="barcode_encoding" type="select" label="Barcode location">
                    <option value="--inline_null" selected="True">Barcode is inline with sequence</option>
                    <option value="--index">Barcode is provided in FASTQ header</option>
                </param>
            </when>
            <when value="paired">
                <param name="inputs_paired1" format="fastqsanger,fastq.gz" type="data" multiple="true" label="paired-end reads infile(s) 1" help="Files must have this syntax : name_R1_001.fastq" />
                <param name="inputs_paired2" format="fastqsanger,fastq.gz" type="data" multiple="true" label="paired-end reads infile(s) 2" help="Files must have this syntax : name_R2_001.fastq" />

                <param name="barcode_encoding" type="select" label="Barcode location">
                    <option value="--inline_inline" selected="True">Barcode is inline with sequence</option>
                    <option value="--index_index">Barcode is provided in FASTQ header</option>
                </param>
            </when>
        </conditional>

        <!-- TODO new input formats -->
        <param name="inputype" type="select" format="text" label="Inputs format">
            <option value="fastq" selected="True">fastq</option>
            <option value="gzfastq">fastq.gz</option>
            <option value="bustard">Illumina BUSTARD</option>
        </param>
        <param name="barcode" type="data" format="tabular,txt" label="Barcode file" help="Barcode file" />

        <param name="sample_name" type="text" value="sample" label="Sample name" help="Precise the sample name if using several NGS runs" />

        <conditional name="options_enzyme">
            <param name="options_enzyme_selector" type="select" label="Number of enzymes">
                <option value="1">One</option>
                <option value="2">Two</option>
            </param>
            <when value="1">
                <param name="enzyme" type="select" format="text" label="Enzyme" help="provide the restriction enzyme used" >
                    <option value="apeKI">apeKI</option>
                    <option value="bamHI">bamHI</option>
                    <option value="claI">claI</option>
                    <option value="dpnII">dpnII</option>
                    <option value="eaeI">eaeI</option>
                    <option value="ecoRI">ecoRI</option>
                    <option value="ecoT22I">ecoT22I</option>
                    <option value="hindIII">hindIII</option>
                    <option value="mluCI">mluCI</option>
                    <option value="mseI">mseI</option>
                    <option value="mspI">mspI</option>
                    <option value="ndeI">ndeI</option>
                    <option value="nlaIII">nlaIII</option>
                    <option value="notI">notI</option>
                    <option value="nsiI">nsiI</option>
                    <option value="pstI">pstI</option>
                    <option value="sau3AI">sau3AI</option>
                    <option value="sbfI">sbfI</option>
                    <option value="sexAI">sexAI</option>
                    <option value="sgrAI">sgrAI</option>
                    <option value="sphI">sphI</option>
                    <option value="taqI">taqI</option>
                    <option value="xbaI">xbaI</option>
                </param>
            </when>
            <when value="2">
                <param name="enzyme" type="select" format="text" label="Enzyme" help="provide the restriction enzyme used" >
                    <option value="apeKI">apeKI</option>
                    <option value="bamHI">bamHI</option>
                    <option value="claI">claI</option>
                    <option value="dpnII">dpnII</option>
                    <option value="eaeI">eaeI</option>
                    <option value="ecoRI">ecoRI</option>
                    <option value="ecoT22I">ecoT22I</option>
                    <option value="hindIII">hindIII</option>
                    <option value="mluCI">mluCI</option>
                    <option value="mseI">mseI</option>
                    <option value="mspI">mspI</option>
                    <option value="ndeI">ndeI</option>
                    <option value="nlaIII">nlaIII</option>
                    <option value="notI">notI</option>
                    <option value="nsiI">nsiI</option>
                    <option value="pstI">pstI</option>
                    <option value="sau3AI">sau3AI</option>
                    <option value="sbfI">sbfI</option>
                    <option value="sexAI">sexAI</option>
                    <option value="sgrAI">sgrAI</option>
                    <option value="sphI">sphI</option>
                    <option value="taqI">taqI</option>
                    <option value="xbaI">xbaI</option>
                </param>
                <param name="enzyme2" type="select" format="text" label="Second enzyme" help="provide the second restriction enzyme used" >
                    <option value="apeKI">apeKI</option>
                    <option value="bamHI">bamHI</option>
                    <option value="claI">claI</option>
                    <option value="dpnII">dpnII</option>
                    <option value="eaeI">eaeI</option>
                    <option value="ecoRI">ecoRI</option>
                    <option value="ecoT22I">ecoT22I</option>
                    <option value="hindIII">hindIII</option>
                    <option value="mluCI">mluCI</option>
                    <option value="mseI">mseI</option>
                    <option value="mspI">mspI</option>
                    <option value="ndeI">ndeI</option>
                    <option value="nlaIII">nlaIII</option>
                    <option value="notI">notI</option>
                    <option value="nsiI">nsiI</option>
                    <option value="pstI">pstI</option>
                    <option value="sau3AI">sau3AI</option>
                    <option value="sbfI">sbfI</option>
                    <option value="sexAI">sexAI</option>
                    <option value="sgrAI">sgrAI</option>
                    <option value="sphI">sphI</option>
                    <option value="taqI">taqI</option>
                    <option value="xbaI">xbaI</option>
                </param>
            </when>
        </conditional>

        <param name="capture" type="boolean" truevalue="-D" falsevalue="" label="Capture discarded reads to a file" />
        
        <section name="options_advanced" title="advanced options" expanded="False">
            <param name="sliding" type="float" value="0.15" label="Set the size of the sliding window as a fraction of the read length, between 0 and 1 (default 0.15)" />
            <param name="score" type="integer" value="10" label="Set the score limit. If the average score within the sliding window drops below this value, the read is discarded (default 10)" />
            <param name="remove" type="boolean" checked="false" default="false" truevalue="-c" falsevalue="" label="Clean data, remove any read with an uncalled base" />
            <param name="discard" type="boolean" checked="false" default="false" truevalue="-q" falsevalue="" label="Discard reads with low quality scores"/>
            <param name="rescue" type="boolean" checked="false" default="false" truevalue="-r" falsevalue="" label="Rescue barcodes and RAD-Tags?"/>
            <param name="truncate" type="integer" value="-1" label="Truncate final read length to this value" help="default = -1" />
        </section>

        <param name="outype" type="select" format="text" label="Output format" help="output type, either 'fastq' or 'fasta' (default fastq)" >
            <option value="fastq">fastq</option>
            <option value="fasta">fasta</option>
        </param>

        <param name="options_output_infos_selector" type="select" label="Output type">
            <option value="collection">Normal (a fastq file by barcode)</option>
            <option value="collection_zip" selected="True">Additional zip archive with all files (Normal + one archive with all fastq files)</option>
            <option value="zip">Only a zip archive with all files (one archive with all fastq files)</option>
        </param>

    </inputs>

    <outputs>
        <data format="txt" name="output_log" label="results.log with ${tool.name} on ${on_string}: demultiplexed and cleaned reads" />

        <collection name="additional" type="list" label="Demultiplexed reads from ${on_string}">
            <discover_datasets pattern="__designation_and_ext__" directory="galaxy_outputs" visible="true" />
        </collection>
        <data format="zip" name="output_archive" label="all_files.zip with ${tool.name} on ${on_string}: demultiplexed and cleaned reads ">
            <filter>options_output_infos_selector != "collection"</filter>
        </data>
        <data format="fastq" name="discard_file" label="${tool.name}: discarded reads from ${on_string}">
            <filter>capture != "-D"</filter>
            <discover_datasets pattern="(?P&lt;name&gt;.+)\.discards" ext="tabular" directory="galaxy_outputs" visible="true" />
        </data>
    </outputs>



    <help>
    .. class:: infomark

    **What it does**

    This program examines raw reads from an Illumina sequencing run and first, checks that the barcode and the RAD cutsite are intact, and demultiplexes the data. If there are 
    errors in the barcode or the RAD site within a certain allowance process_radtags can correct them. Second, it slides a window down the length of the read and checks the 
    average quality score within the window. If the score drops below 90% probability of being correct (a raw phred score of 10), the read is discarded. This allows for some 
    seqeuncing errors while elimating reads where the sequence is degrading as it is being sequenced. By default the sliding window is 15% of the length of the read, but can be 
    specified on the command line (the threshold and window size can be adjusted).
    The process_radtags program can:
    handle data that is barcoded, either inline or using an index, or unbarcoded.
    use combinatorial barcodes.
    check and correct for a restriction enzyme cutsite for single or double-digested 
    data.
    filter adapter sequence while allowing for sequencing error in the adapter pattern.
    process individual files or whole directories of files.
    directly read gzipped data
    filter reads based on Illumina's Chastity filter

    **Help**

    Input files:

    - FASTQ, FASTA, zip, tar.gz

    - Barcode File Format

    The barcode file is a very simple format : one barcode per line.

        CGATA
        CGGCG
        GAAGC
        GAGAT
        CGATA
        CGGCG
        GAAGC
        GAGAT

    Combinatorial barcodes are specified, one per column, separated by a tab::

        CGATA    ACGTA
        CGGCG    CGTA
        GAAGC    CGTA
        GAGAT    CGTA
        CGATA    AGCA 
        CGGCG    AGCA
        GAAGC    AGCA
        GAGAT    AGCA


    Instructions to add the functionality of archives management in Galaxy on the `eBiogenouest HUB wiki &lt;https://www.e-biogenouest.org/wiki/ManArchiveGalaxy&gt;`_ .

    **Created by:**

    Stacks was developed by Julian Catchen with contributions from Angel Amores, Paul Hohenlohe, and Bill Cresko

    **Project links:**

    `STACKS website &lt;http://creskolab.uoregon.edu/stacks/&gt;`_ .

    `STACKS manual &lt;http://creskolab.uoregon.edu/stacks/stacks_manual.pdf&gt;`_ .

    `STACKS google group &lt;https://groups.google.com/forum/#!forum/stacks-users&gt;`_ .

    **Integrated by:**

    Yvan Le Bras and Cyril Monjeaud

    GenOuest Bio-informatics Core Facility

    UMR 6074 IRISA INRIA-CNRS-UR1 Rennes (France)

    support@genouest.org

    If you use this tool in Galaxy, please cite :

    `Y. Le Bras, A. Roult, C. Monjeaud, M. Bahin, O. Quenez, C. Heriveau, A. Bretaudeau, O. Sallou, O. Collin, Towards a Life Sciences Virtual Research Environment : an e-Science initiative in Western France. JOBIM 2013. &lt;https://www.e-biogenouest.org/resources/128&gt;`_
    </help>
    <expand macro="citation" />
</tool>
